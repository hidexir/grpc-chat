// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InRoomReq struct {
	RoomID               []byte   `protobuf:"bytes,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InRoomReq) Reset()         { *m = InRoomReq{} }
func (m *InRoomReq) String() string { return proto.CompactTextString(m) }
func (*InRoomReq) ProtoMessage()    {}
func (*InRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *InRoomReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InRoomReq.Unmarshal(m, b)
}
func (m *InRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InRoomReq.Marshal(b, m, deterministic)
}
func (m *InRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InRoomReq.Merge(m, src)
}
func (m *InRoomReq) XXX_Size() int {
	return xxx_messageInfo_InRoomReq.Size(m)
}
func (m *InRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_InRoomReq proto.InternalMessageInfo

func (m *InRoomReq) GetRoomID() []byte {
	if m != nil {
		return m.RoomID
	}
	return nil
}

type InRoomRes struct {
	RoomID               string   `protobuf:"bytes,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InRoomRes) Reset()         { *m = InRoomRes{} }
func (m *InRoomRes) String() string { return proto.CompactTextString(m) }
func (*InRoomRes) ProtoMessage()    {}
func (*InRoomRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *InRoomRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InRoomRes.Unmarshal(m, b)
}
func (m *InRoomRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InRoomRes.Marshal(b, m, deterministic)
}
func (m *InRoomRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InRoomRes.Merge(m, src)
}
func (m *InRoomRes) XXX_Size() int {
	return xxx_messageInfo_InRoomRes.Size(m)
}
func (m *InRoomRes) XXX_DiscardUnknown() {
	xxx_messageInfo_InRoomRes.DiscardUnknown(m)
}

var xxx_messageInfo_InRoomRes proto.InternalMessageInfo

func (m *InRoomRes) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type SendMessageReq struct {
	Body                 string   `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageReq) Reset()         { *m = SendMessageReq{} }
func (m *SendMessageReq) String() string { return proto.CompactTextString(m) }
func (*SendMessageReq) ProtoMessage()    {}
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *SendMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageReq.Unmarshal(m, b)
}
func (m *SendMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageReq.Marshal(b, m, deterministic)
}
func (m *SendMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageReq.Merge(m, src)
}
func (m *SendMessageReq) XXX_Size() int {
	return xxx_messageInfo_SendMessageReq.Size(m)
}
func (m *SendMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageReq proto.InternalMessageInfo

func (m *SendMessageReq) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type SendMessageRes struct {
	Body                 string   `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageRes) Reset()         { *m = SendMessageRes{} }
func (m *SendMessageRes) String() string { return proto.CompactTextString(m) }
func (*SendMessageRes) ProtoMessage()    {}
func (*SendMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *SendMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRes.Unmarshal(m, b)
}
func (m *SendMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRes.Marshal(b, m, deterministic)
}
func (m *SendMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRes.Merge(m, src)
}
func (m *SendMessageRes) XXX_Size() int {
	return xxx_messageInfo_SendMessageRes.Size(m)
}
func (m *SendMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRes proto.InternalMessageInfo

func (m *SendMessageRes) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*InRoomReq)(nil), "proto.InRoomReq")
	proto.RegisterType((*InRoomRes)(nil), "proto.InRoomRes")
	proto.RegisterType((*SendMessageReq)(nil), "proto.SendMessageReq")
	proto.RegisterType((*SendMessageRes)(nil), "proto.SendMessageRes")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xce, 0x48, 0x2c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xca, 0x5c, 0x9c, 0x9e, 0x79,
	0x41, 0xf9, 0xf9, 0xb9, 0x41, 0xa9, 0x85, 0x42, 0x62, 0x5c, 0x6c, 0x20, 0xa6, 0xa7, 0x8b, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x94, 0x87, 0xac, 0xa8, 0x18, 0x4d, 0x11, 0x27, 0x5c, 0x91,
	0x0a, 0x17, 0x5f, 0x70, 0x6a, 0x5e, 0x8a, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0x2a, 0xc8, 0x38,
	0x21, 0x2e, 0x16, 0xa7, 0xfc, 0x94, 0x4a, 0xa8, 0x3a, 0x30, 0x1b, 0x43, 0x55, 0x31, 0x36, 0x55,
	0x46, 0x95, 0x5c, 0x2c, 0xce, 0x19, 0x89, 0x25, 0x42, 0x46, 0x5c, 0x6c, 0x10, 0x8b, 0x85, 0x04,
	0x20, 0xce, 0xd6, 0x83, 0x3b, 0x56, 0x0a, 0x5d, 0xa4, 0x58, 0x89, 0x41, 0x83, 0xd1, 0x80, 0x51,
	0xc8, 0x96, 0x8b, 0x1b, 0xc9, 0x06, 0x21, 0x51, 0xa8, 0x32, 0x54, 0xb7, 0x49, 0x61, 0x15, 0x2e,
	0x56, 0x62, 0x48, 0x62, 0x03, 0x8b, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x1f, 0x84,
	0x02, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	InRoom(ctx context.Context, opts ...grpc.CallOption) (Chat_InRoomClient, error)
	SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageRes, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) InRoom(ctx context.Context, opts ...grpc.CallOption) (Chat_InRoomClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/proto.Chat/InRoom", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatInRoomClient{stream}
	return x, nil
}

type Chat_InRoomClient interface {
	Send(*InRoomReq) error
	Recv() (*InRoomRes, error)
	grpc.ClientStream
}

type chatInRoomClient struct {
	grpc.ClientStream
}

func (x *chatInRoomClient) Send(m *InRoomReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatInRoomClient) Recv() (*InRoomRes, error) {
	m := new(InRoomRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) SendMessage(ctx context.Context, in *SendMessageReq, opts ...grpc.CallOption) (*SendMessageRes, error) {
	out := new(SendMessageRes)
	err := c.cc.Invoke(ctx, "/proto.Chat/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	InRoom(Chat_InRoomServer) error
	SendMessage(context.Context, *SendMessageReq) (*SendMessageRes, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) InRoom(srv Chat_InRoomServer) error {
	return status.Errorf(codes.Unimplemented, "method InRoom not implemented")
}
func (*UnimplementedChatServer) SendMessage(ctx context.Context, req *SendMessageReq) (*SendMessageRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_InRoom_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).InRoom(&chatInRoomServer{stream})
}

type Chat_InRoomServer interface {
	Send(*InRoomRes) error
	Recv() (*InRoomReq, error)
	grpc.ServerStream
}

type chatInRoomServer struct {
	grpc.ServerStream
}

func (x *chatInRoomServer) Send(m *InRoomRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatInRoomServer) Recv() (*InRoomReq, error) {
	m := new(InRoomReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Chat_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Chat/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendMessage(ctx, req.(*SendMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _Chat_SendMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InRoom",
			Handler:       _Chat_InRoom_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chat.proto",
}
